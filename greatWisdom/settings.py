"""
Django settings for greatWisdom project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*z-!aj1d$$%#sgnmxieqnvw(pyx8@sl2=rbso&&i-w&bcpodv^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'studyNoteWeb',
    'littleGame',
    'fileSystem'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'greatWisdom.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'greatWisdom.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

# 修改语言和时区:设置为中文模式和中国时间
LANGUAGE_CODE = 'zh-Hans'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = False      # 指对时区的处理方式，True时， 存储到数据库的时间是世界时间"UTC"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [        # 如果没有添加staticfiles_dirs，templates中的html文件在引用static中的js文件会404找不到文件
    os.path.join(BASE_DIR, "static")
]

LOGGING = {
    'version': 1,                               # 定义版本1，版本1是目前唯一的版本格式
    'disable_existing_loggers': False,          # 允许使用已有的默认过滤器

    # 日志格式器
    'formatters': {
        'verbose':{                             # 定义一个格式器verbose
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {                             # 定义一个格式器simple
            'format': '%(levelname)s %(message)s'
        }
    },

    # 日志过滤器
    'filters': {
        'require_debut_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
        # 'special': {      # 报错了，还没找到原因
        #     '()': 'project.logging.SpecialFilter',
        #     'foo': 'bar',
        # }
    },

    # 日志处理器
    'handlers': {
        'file': {                               # 定义一个处理器file
            'level': 'INFO',                    # 定义handler的日志级别
            'class': 'logging.FileHandler',     # 定义文件类处理器，可以将日志写入文件中
            'filename': os.path.join(BASE_DIR, 'logs/debug.log'), # 定义日志信息的存储路径，文件路径需要确认有可写权限
            'formatter': 'verbose',              # 过滤规则使用 verbose格式器
        },
        # 'console': {
        #     'level': 'INFO',
        #     'class': 'logging.StreamHandler',
        #     'filters': ['require_debug_true'],
        #     'formatter': 'simple'
        # },
        # 'mail_admin': {
        #     'level': 'ERROR',
        #     'class': 'django.utils.log.AdminEmailHandler',  # 定义处理器类型，将错误信息发送到该网站的admin超级用户的有向
        #     'filters': ['special']
        # }
    },
    # 日志记录器
    'loggers': {
        'django': {                             # 记录django项目中的信息
            'handlers': ['file'],               # 使用 file日志处理器
            'level': 'INFO',                    # 日志等级为DEBUG
            'propagate': True,                  # 允许传播至上级记录器
        }
    }
}

# Default primary key field type
# https:https://cloud.tencent.com/developer/article/1119369//docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
